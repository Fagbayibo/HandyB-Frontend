import React, { useState, useRef } from "react";
import { RefreshCw, Mail, Send } from "lucide-react"; 

const EmailOtpPage = () => {
  const [otp, setOtp] = useState(["", "", "", "", ""]); 
  const [error, setError] = useState("");
  const [message, setMessage] = useState("");
  const inputsRef = useRef([]);

  const handleChange = (element, index) => {
    if (!/^\d*$/.test(element.value)) return;

    const newOtp = [...otp];
    newOtp[index] = element.value;
    setOtp(newOtp);

    if (element.value && index < otp.length - 1) {
      inputsRef.current[index + 1].focus();
    }
  };

  const handleKeyDown = (e, index) => {
    if (e.key === "Backspace" && !otp[index] && index > 0) {
      const newOtp = [...otp];
      newOtp[index - 1] = "";
      setOtp(newOtp);
      inputsRef.current[index - 1].focus();
      e.preventDefault();
    }
  };

  const handleResend = () => {
    setMessage("ðŸ”„ OTP has been resent!");
    setError("");
    setOtp(["", "", "", "", ""]);
    inputsRef.current[0]?.focus();
  };

  const handleSendEmail = () => {
    setMessage("ðŸ“§ OTP will be sent via email!");
    setError("");
    setOtp(["", "", "", "", ""]);
    inputsRef.current[0]?.focus();
  };

  return (
    <div className="relative min-h-screen w-full bg-white font-poppins flex items-center justify-center px-4 overflow-hidden">
      {/* Pattern background */}
      <div
        className="absolute top-[-100px] left-1/2 -translate-x-1/2 w-[900px] h-[900px] opacity-10 pointer-events-none"
        style={{
          backgroundImage: "url('/pattern.svg')",
          backgroundSize: "cover",
          backgroundRepeat: "no-repeat",
        }}
      ></div>

      {/* Main Card */}
      <div className="relative w-full max-w-3xl bg-white rounded-xl flex flex-col items-center text-center px-6 py-10 md:px-12">
        {/* Icon */}
        <div className="w-16 h-16 rounded-full bg-[#F9F9F9] flex items-center justify-center">
          <Send size={36} className="text-black" />
        </div>

        {/* Heading */}
        <h2 className="mt-6 text-xl md:text-2xl font-semibold text-black">
          Confirmation OTP Sent!
        </h2>

        {/* Description */}
        <p className="mt-4 text-sm md:text-lg text-gray-800 leading-relaxed max-w-xl">
          We've sent a <span className="font-bold">Verification OTP</span> to{" "}
          <span className="font-semibold">(+91-356-464-2465)</span>. Please
          check your inbox and fill the boxes to confirm your account.
        </p>

        {/* OTP Inputs */}
        <div className="flex justify-center gap-3 md:gap-4 mt-8 flex-wrap">
          {otp.map((value, index) => (
            <input
              key={index}
              type="text"
              maxLength="1"
              value={value}
              onChange={(e) => handleChange(e.target, index)}
              onKeyDown={(e) => handleKeyDown(e, index)}
              ref={(el) => (inputsRef.current[index] = el)}
              autoComplete="off"
              inputMode="numeric"
              className="w-12 h-12 md:w-14 md:h-14 text-center text-xl md:text-2xl font-semibold rounded-lg outline-none border-2 border-gray-400 text-black focus:border-gradient-brand transition"
            />
          ))}
        </div>

        {/* Action Buttons */}
        <div className="flex flex-col sm:flex-row justify-center items-center gap-6 mt-8 text-[#000000] text-sm md:text-base font-medium">
          <button
            onClick={handleResend}
            className="flex items-center gap-2 hover:opacity-80 transition text-blue-600"
          >
            <RefreshCw size={20} /> Resend OTP
          </button>
          <button
            onClick={handleSendEmail}
            className="flex items-center gap-2 hover:opacity-80 transition text-blue-600"
          >
            <Mail size={20} /> Send via SMS
          </button>
        </div>

        {/* Feedback Messages */}
        {error && (
          <p className="mt-4 text-red-600 font-medium text-sm">{error}</p>
        )}
        {message && (
          <p className="mt-4 text-green-600 font-medium text-sm">{message}</p>
        )}

        {/* Footer Help Text */}
        <p className="mt-10 text-xs md:text-sm text-gray-500">
          Experiencing email problems?{" "}
          <a
            href="mailto:support@example.com"
            className="font-bold underline text-blue-600 hover:opacity-80"
          >
            Contact us
          </a>
        </p>
      </div>
    </div>
  );
};

export default EmailOtpPage;
